
package fi.lenkkeri.external.equipment;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 3.0.1
 * 2017-03-12T14:36:42.991+02:00
 * Generated source version: 3.0.1
 * 
 */
public final class PlaneDataService_PlaneDataServicePort_Client {

    private static final QName SERVICE_NAME = new QName("http://equipment.external.lenkkeri.fi/", "PlaneDataServiceService");

    private PlaneDataService_PlaneDataServicePort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = PlaneDataServiceService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        PlaneDataServiceService ss = new PlaneDataServiceService(wsdlURL, SERVICE_NAME);
        PlaneDataService port = ss.getPlaneDataServicePort();  
        
        {
        System.out.println("Invoking listAllPlanes...");
        java.lang.Integer _listAllPlanes_max = null;
        java.lang.Integer _listAllPlanes_offset = null;
        java.util.List<fi.lenkkeri.external.equipment.PlaneData> _listAllPlanes__return = port.listAllPlanes(_listAllPlanes_max, _listAllPlanes_offset);
        System.out.println("listAllPlanes.result=" + _listAllPlanes__return);


        }
        {
        System.out.println("Invoking findPlaneBySN...");
        java.lang.String _findPlaneBySN_serialNumber = "";
        java.util.List<fi.lenkkeri.external.equipment.PlaneData> _findPlaneBySN__return = port.findPlaneBySN(_findPlaneBySN_serialNumber);
        System.out.println("findPlaneBySN.result=" + _findPlaneBySN__return);


        }
        {
        System.out.println("Invoking findPlanesByType...");
        java.lang.String _findPlanesByType_type = "";
        java.lang.Integer _findPlanesByType_max = null;
        java.lang.Integer _findPlanesByType_offset = null;
        java.util.List<fi.lenkkeri.external.equipment.PlaneData> _findPlanesByType__return = port.findPlanesByType(_findPlanesByType_type, _findPlanesByType_max, _findPlanesByType_offset);
        System.out.println("findPlanesByType.result=" + _findPlanesByType__return);


        }

        System.exit(0);
    }

}
